{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Workspace\\\\cursos\\\\moveit\\\\src\\\\contexts\\\\CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengsContext } from \"./ChallengeContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimetout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengsContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function resetCountdown() {\n    clearTimeout(countdownTimetout);\n    setIsActive(false);\n    setTime(25 * 60);\n    setHasFinished(false);\n  }\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimetout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      clearTimeout(countdownTimetout);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownProvider, \"mj5/cnN4jENLd9Ysf8U5sf/QRNY=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["C:/Workspace/cursos/moveit/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengsContext","CountdownContext","countdownTimetout","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","resetCountdown","clearTimeout","startCountdown","setTimeout"],"mappings":";;;;;AAAA,SACEA,aADF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,gBAAT,QAAiC,oBAAjC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,iBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,oBACxCP,UAAU,CAACG,gBAAD,CAD8B;AAAA,MAC9DK,iBAD8D,eAC9DA,iBAD8D;;AAAA,kBAG9CN,QAAQ,CAAC,KAAK,EAAN,CAHsC;AAAA,MAG/DO,IAH+D;AAAA,MAGzDC,OAHyD;;AAAA,mBAItCR,QAAQ,CAAC,KAAD,CAJ8B;AAAA,MAI/DS,QAJ+D;AAAA,MAIrDC,WAJqD;;AAAA,mBAKhCV,QAAQ,CAAC,KAAD,CALwB;AAAA,MAK/DW,WAL+D;AAAA,MAKlDC,cALkD;;AAOtE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAACf,iBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAK,EAAN,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AACD,WAASO,cAAT,GAA0B;AACxBT,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAEDX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBJ,MAAAA,iBAAiB,GAAGiB,UAAU,CAAC,YAAM;AACnCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF6B,EAE3B,IAF2B,CAA9B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AACjCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,MAAAA,YAAY,CAACf,iBAAD,CAAZ;AAEAG,MAAAA,iBAAiB;AAClB;AACF,GAZQ,EAYN,CAACG,QAAD,EAAWF,IAAX,CAZM,CAAT;AAcA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAPA,OADK;AAELG,MAAAA,OAAO,EAAPA,OAFK;AAGLL,MAAAA,WAAW,EAAXA,WAHK;AAILF,MAAAA,QAAQ,EAARA,QAJK;AAKLU,MAAAA,cAAc,EAAdA,cALK;AAMLF,MAAAA,cAAc,EAAdA;AANK,KADT;AAAA,cAUGZ;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhDeD,iB;;KAAAA,iB","sourcesContent":["import {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ChallengsContext } from \"./ChallengeContext\";\r\n\r\ninterface CountdownContextData {\r\n  minutes: number;\r\n  seconds: number;\r\n  hasFinished: boolean;\r\n  isActive: boolean;\r\n  startCountdown: () => void;\r\n  resetCountdown: () => void;\r\n}\r\n\r\ninterface CountdownProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextData);\r\n\r\nlet countdownTimetout: NodeJS.Timeout;\r\n\r\nexport function CountdownProvider({ children }: CountdownProviderProps) {\r\n  const { startNewChallenge } = useContext(ChallengsContext);\r\n\r\n  const [time, setTime] = useState(25 * 60);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [hasFinished, setHasFinished] = useState(false);\r\n\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  function resetCountdown() {\r\n    clearTimeout(countdownTimetout);\r\n    setIsActive(false);\r\n    setTime(25 * 60);\r\n    setHasFinished(false);\r\n  }\r\n  function startCountdown() {\r\n    setIsActive(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isActive && time > 0) {\r\n      countdownTimetout = setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    } else if (isActive && time === 0) {\r\n      setHasFinished(true);\r\n      setIsActive(false);\r\n      clearTimeout(countdownTimetout);\r\n\r\n      startNewChallenge();\r\n    }\r\n  }, [isActive, time]);\r\n\r\n  return (\r\n    <CountdownContext.Provider\r\n      value={{\r\n        minutes,\r\n        seconds,\r\n        hasFinished,\r\n        isActive,\r\n        startCountdown,\r\n        resetCountdown,\r\n      }}\r\n    >\r\n      {children}\r\n    </CountdownContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}