{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Workspace\\\\cursos\\\\moveit\\\\src\\\\components\\\\Countdown.tsx\";\nimport React, { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\n\nconst Countdown = () => {\n  const {\n    hasFinished,\n    minutes,\n    seconds,\n    isActive,\n    resetCountdown,\n    startCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.countdownBtn,\n      disabled: true,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownBtn} ${styles.countdownBtnActive}`,\n        onClick: resetCountdown,\n        children: \"Abondonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownBtn,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Countdown;","map":{"version":3,"sources":["C:/Workspace/cursos/moveit/src/components/Countdown.tsx"],"names":["React","useContext","CountdownContext","styles","Countdown","hasFinished","minutes","seconds","isActive","resetCountdown","startCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownBtn","countdownBtnActive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA;AANI,MAOFT,UAAU,CAACC,gBAAD,CAPd;AASA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGZ,WAAW,gBACV;AAAQ,MAAA,SAAS,EAAEF,MAAM,CAACgB,YAA1B;AAAwC,MAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAKV;AAAA,gBACGX,QAAQ,gBACP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEL,MAAM,CAACgB,YAAa,IAAGhB,MAAM,CAACiB,kBAAmB,EAFjE;AAGE,QAAA,OAAO,EAAEX,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,gBASP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEN,MAAM,CAACgB,YAFpB;AAGE,QAAA,OAAO,EAAET,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,qBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAtDD;;AAwDA,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CountdownContext } from \"../contexts/CountdownContext\";\r\nimport styles from \"../styles/components/Countdown.module.css\";\r\n\r\nconst Countdown = () => {\r\n  const {\r\n    hasFinished,\r\n    minutes,\r\n    seconds,\r\n    isActive,\r\n    resetCountdown,\r\n    startCountdown,\r\n  } = useContext(CountdownContext);\r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {hasFinished ? (\r\n        <button className={styles.countdownBtn} disabled>\r\n          Ciclo encerrado\r\n        </button>\r\n      ) : (\r\n        <>\r\n          {isActive ? (\r\n            <button\r\n              type=\"button\"\r\n              className={`${styles.countdownBtn} ${styles.countdownBtnActive}`}\r\n              onClick={resetCountdown}\r\n            >\r\n              Abondonar ciclo\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              className={styles.countdownBtn}\r\n              onClick={startCountdown}\r\n            >\r\n              Iniciar um ciclo\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n"]},"metadata":{},"sourceType":"module"}